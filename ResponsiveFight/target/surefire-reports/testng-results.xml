<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="7" passed="5" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-20T05:30:30Z" name="Command line suite" finished-at="2021-07-20T05:31:05Z" duration-ms="35045">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.TestRunner@631330c]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-07-20T05:30:30Z" name="Command line test" finished-at="2021-07-20T05:31:05Z" duration-ms="35045">
      <class name="com.runner.TestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:30:30Z" name="setUpClass" finished-at="2021-07-20T15:30:30Z" duration-ms="325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:30:30Z" name="setup" finished-at="2021-07-20T15:30:30Z" duration-ms="299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:30:30Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-20T15:30:47Z" duration-ms="17319" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Acceptance testing to validate the following.]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.stepdefinations.CovidBattleStep.the_user_checks_his_final_score(CovidBattleStep.java:91)
	at ✽.the user checks his final score(file:///Users/xvaa2/Documents/CBA/Automation/automation-framework-bdd-for-cba/src/test/resources/features/CovidBattle.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:30:47Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-20T15:30:54Z" duration-ms="6777" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Acceptance testing to validate the following.]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchFrameException">
            <message>
              <![CDATA[
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'pcbuilds-MacBook-Pro.local', ip: '2405:6e00:1339:3400:514e:f1fe:aa7f:9bd8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '16.0.1'
Driver info: org.openqa.selenium.safari.SafariDriver
Capabilities {acceptInsecureCerts: false, browserName: Safari, browserVersion: 14.0.3, javascriptEnabled: true, platform: MAC, platformName: MAC, safari:automaticInspection: false, safari:automaticProfiling: false, safari:diagnose: false, safari:platformBuildVersion: 19H114, safari:platformVersion: 10.15.7, safari:useSimulator: false, setWindowRect: true, strictFileInteractability: false, webkit:WebRTC: {DisableICECandidateFiltering: false, DisableInsecureMediaCapture: false}}
Session ID: ECDB9A9C-C27B-4595-88B6-19AC9B247558
*** Element info: {Using=css selector, value=.alpha-heading}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchFrameException: 
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'pcbuilds-MacBook-Pro.local', ip: '2405:6e00:1339:3400:514e:f1fe:aa7f:9bd8%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '16.0.1'
Driver info: org.openqa.selenium.safari.SafariDriver
Capabilities {acceptInsecureCerts: false, browserName: Safari, browserVersion: 14.0.3, javascriptEnabled: true, platform: MAC, platformName: MAC, safari:automaticInspection: false, safari:automaticProfiling: false, safari:diagnose: false, safari:platformBuildVersion: 19H114, safari:platformVersion: 10.15.7, safari:useSimulator: false, setWindowRect: true, strictFileInteractability: false, webkit:WebRTC: {DisableICECandidateFiltering: false, DisableInsecureMediaCapture: false}}
Session ID: ECDB9A9C-C27B-4595-88B6-19AC9B247558
*** Element info: {Using=css selector, value=.alpha-heading}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at com.pages.BattleFieldPage.getLnkTextHeading(BattleFieldPage.java:27)
	at com.stepdefinations.CovidBattleStep.user_selects_his_battlefield_as(CovidBattleStep.java:70)
	at ✽.user selects his battlefield as "bus"(file:///Users/xvaa2/Documents/CBA/Automation/automation-framework-bdd-for-cba/src/test/resources/features/CovidBattle.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchFrameException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:30:54Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-20T15:30:59Z" duration-ms="4314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["This test will create new user."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Regression testing of all the supported rest api's.]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:30:59Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-20T15:31:00Z" duration-ms="1386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["This test will check the presence of user."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Regression testing of all the supported rest api's.]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:31:00Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-20T15:31:02Z" duration-ms="1921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["This test will update user."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Regression testing of all the supported rest api's.]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:31:02Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-20T15:31:03Z" duration-ms="1460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["This test will delete the user."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Regression testing of all the supported rest api's.]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.runner.TestRunner@631330c]" started-at="2021-07-20T15:31:03Z" name="tearDownClass" finished-at="2021-07-20T15:31:03Z" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.runner.TestRunner -->
      <class name="com.functional.restTest">
        <test-method signature="mytest()[pri:0, instance:com.functional.restTest@4abdb505]" started-at="2021-07-20T15:31:03Z" name="mytest" finished-at="2021-07-20T15:31:05Z" duration-ms="1159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest -->
      </class> <!-- com.functional.restTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
